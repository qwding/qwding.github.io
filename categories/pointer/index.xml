<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pointer on QWDing blog</title>
    <link>http://qwding.github.io/categories/pointer/</link>
    <description>Recent content in Pointer on QWDing blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2016 19:19:58 +0800</lastBuildDate>
    
	<atom:link href="http://qwding.github.io/categories/pointer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golang: change instance address in his method</title>
      <link>http://qwding.github.io/post/golang_struct_func_changeaddr/</link>
      <pubDate>Wed, 01 Jun 2016 19:19:58 +0800</pubDate>
      
      <guid>http://qwding.github.io/post/golang_struct_func_changeaddr/</guid>
      <description>前提回顾 对于结构体中的指针应用，大部分可能知道的是如下两代码的区别
func (a *AA) funcA()
func (a AA) funcB()
区别在于，我们在funcA内修改a的值，是可以成功的，但是在funcB修改a的值是失败的。
因为funcA中的a是指针传递，funcB中的a是值传递。这个大家都知道。
今天话题 先上代码
package main import ( &amp;quot;fmt&amp;quot; ) type AA struct { xyz string opq string } func (this *AA) Change() { b := &amp;amp;AA{xyz: &amp;quot;xyz1&amp;quot;, opq: &amp;quot;opq1&amp;quot;} this = b fmt.Println(&amp;quot;in this:&amp;quot;, this, &amp;quot;addr:&amp;quot;, &amp;amp;this) } func main() { a := &amp;amp;AA{xyz: &amp;quot;xyz0&amp;quot;, opq: &amp;quot;opq0&amp;quot;} fmt.Println(&amp;quot;before a:&amp;quot;, a, &amp;quot;addr:&amp;quot;, &amp;amp;a) a.Change() fmt.Println(&amp;quot;after a:&amp;quot;, a, &amp;quot;addr:&amp;quot;, &amp;amp;a) }  那么问题来了，请回答一下程序执行过程的三个输出是什么。</description>
    </item>
    
  </channel>
</rss>